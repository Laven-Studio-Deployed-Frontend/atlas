datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model accounts {
  id                    String                  @id @default(cuid())
  name                  String?
  email                 String                  @unique
  password              String
  avatar                String?
  admin                 Boolean                 @default(false)
  created               DateTime                @default(now())
  updated               DateTime                @updatedAt
  activity              activity[]
  projects              projects[]
  databases             databases[]
  deployments           deployments[]
  environment_variables environment_variables[]
}

model activity {
  id       String   @id @default(cuid())
  action   String
  ip       String
  owner    String
  created  DateTime @default(now())
  accounts accounts @relation(fields: [owner], references: [id], onDelete: SetNull)
}

model databases {
  id          String       @id @default(cuid())
  name        String
  description String?
  owner       String
  type        DatabaseType
  version     String
  status      String
  dsn         String?      @unique
  port        String?
  backup      String?
  created     DateTime     @default(now())
  updated     DateTime     @updatedAt
  accounts    accounts     @relation(fields: [owner], references: [id], onDelete: SetNull)
}

model deployments {
  id       String         @id @default(cuid())
  origin   String
  type     DeploymentType
  branch   String?
  status   String
  commit   String?
  message  String?
  manual   Boolean
  logs     String?
  project  String
  owner    String
  created  DateTime       @default(now())
  updated  DateTime       @updatedAt
  accounts accounts       @relation(fields: [owner], references: [id], onDelete: SetNull)
  projects projects       @relation(fields: [project], references: [id], onDelete: Cascade)
}

model environment_variables {
  id       String   @id @default(cuid())
  key      String
  value    String
  project  String
  owner    String
  created  DateTime @default(now())
  updated  DateTime @updatedAt
  accounts accounts @relation(fields: [owner], references: [id], onDelete: SetNull)
  projects projects @relation(fields: [project], references: [id], onDelete: Cascade)
}

model projects {
  id                    String                  @id @default(cuid())
  name                  String
  description           String?
  owner                 String
  created               DateTime                @default(now())
  updated               DateTime                @updatedAt
  deleted               DateTime?
  accounts              accounts                @relation(fields: [owner], references: [id], onDelete: SetNull)
  deployments           deployments[]
  environment_variables environment_variables[]
}

enum DatabaseType {
  mysql
  postgres
  mariadb
  mongodb
  redis
  memcached
  rabbitmq
  couchdb
  rethinkdb
  elasticsearch
  clickhouse
}

enum DeploymentType {
  docker
  git
}
